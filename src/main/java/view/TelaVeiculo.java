/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.sql.SQLException;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Veiculo;

/**
 *
 * @author pedro
 */
public class TelaVeiculo extends javax.swing.JFrame {

    /**
     * Creates new form TelaVeiculo
     */
    public TelaVeiculo() {
        initComponents();
        this.setTitle("Cadastrar Veículo");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblVeiculosCadastrados = new javax.swing.JTable();
        lblTitulo = new javax.swing.JLabel();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        lblBuscarPlaca = new javax.swing.JLabel();
        txtBuscarPlaca = new javax.swing.JTextField();
        cbOficial = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblVeiculosCadastrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Placa", "Proprietário", "Oficial"
            }
        ));
        jScrollPane1.setViewportView(tblVeiculosCadastrados);

        lblTitulo.setText("Veículos Cadastrados");

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        lblBuscarPlaca.setText("Buscar por placa:");

        cbOficial.setText("Oficial");
        cbOficial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOficialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBuscarPlaca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbOficial))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNovo)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemover))
                    .addComponent(lblTitulo)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTitulo)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBuscarPlaca)
                    .addComponent(txtBuscarPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbOficial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnEditar)
                    .addComponent(btnRemover))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblVeiculosCadastrados.getSelectedRow();
        if (selectedRow >= 0) {
            String placa = tblVeiculosCadastrados.getValueAt(selectedRow, 0).toString();
            TelaVeiculo telaCadastro = new TelaVeiculo(this, true, placa);
            telaCadastro.setVisible(true);
            filtrarVeiculos();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um veículo para editar.");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblVeiculosCadastrados.getSelectedRow();

        if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Selecione um veículo para remover.");
        return;
        }   

        String placa = (String) tblVeiculosCadastrados.getValueAt(selectedRow, 0);

        int confirm = JOptionPane.showConfirmDialog(this, 
            "Tem certeza que deseja remover o veículo com placa " + placa + "?", 
            "Confirmação", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            removerVeiculo(placa); // Chama o método para remover
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void cbOficialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOficialActionPerformed
        // TODO add your handling code here:
        filtrarVeiculos();
    }//GEN-LAST:event_cbOficialActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        TelaVeiculo telaCadastro = new TelaVeiculo(this, true);
        telaCadastro.setVisible(true);
        filtrarVeiculos();
    }//GEN-LAST:event_btnNovoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVeiculo().setVisible(true);
            }
        });
    }
    
    private void removerVeiculo(String placa) {
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("LPOOEstacionamentoPU");
    EntityManager em = emf.createEntityManager();

    try {
        em.getTransaction().begin();

        Veiculo veiculo = em.find(Veiculo.class, placa);
        if (veiculo != null) {
            em.remove(veiculo);
            em.getTransaction().commit();
            JOptionPane.showMessageDialog(this, "Veículo removido com sucesso.");
            atualizarTabela();
        } else {
            JOptionPane.showMessageDialog(this, "Veículo não encontrado.");
            em.getTransaction().rollback();
        }
    } catch (Exception e) {
        e.printStackTrace();
        em.getTransaction().rollback();
        JOptionPane.showMessageDialog(this, "Erro ao remover veículo: " + e.getMessage());
    } finally {
        em.close();
        emf.close();
    }
    }
    
    private void atualizarTabela() {
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("LPOOEstacionamentoPU");
    EntityManager em = emf.createEntityManager();

    try {
        List<Veiculo> veiculos = em.createQuery("SELECT v FROM Veiculo v", Veiculo.class).getResultList();

        DefaultTableModel model = (DefaultTableModel) tblVeiculosCadastrados.getModel();
        model.setRowCount(0);

        for (Veiculo v : veiculos) {
            //Object[] row = {v.getPlaca(), v.getProprietario(), v.isOficial()};
            //model.addRow(row);
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao atualizar tabela: " + e.getMessage());
    } finally {
        em.close();
        emf.close();
    }
}
    
    private void filtrarVeiculos(String placa, boolean isOficial) {
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("LPOOEstacionamentoPU");
    EntityManager em = emf.createEntityManager();

    try {
        StringBuilder jpql = new StringBuilder("SELECT v FROM Veiculo v WHERE 1=1");
        if (placa != null && !placa.isEmpty()) {
            jpql.append(" AND LOWER(v.placa) LIKE LOWER(:placa)");
        }
        if (isOficial) {
            jpql.append(" AND v.oficial = true");
        }

        TypedQuery<Veiculo> query = em.createQuery(jpql.toString(), Veiculo.class);

        if (placa != null && !placa.isEmpty()) {
            query.setParameter("placa", "%" + placa + "%");
        }

        List<Veiculo> veiculos = query.getResultList();

        // Atualiza a tabela
        DefaultTableModel model = (DefaultTableModel) tblVeiculosCadastrados.getModel();
        model.setRowCount(0);

        for (Veiculo v : veiculos) {
            Object[] row = {v.getPlaca(), v.getProprietario(), v.isOficial()};
            model.addRow(row); 
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao filtrar veículos: " + e.getMessage());
    } finally {
        em.close();
        emf.close();
    }
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnRemover;
    private javax.swing.JCheckBox cbOficial;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBuscarPlaca;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblVeiculosCadastrados;
    private javax.swing.JTextField txtBuscarPlaca;
    // End of variables declaration//GEN-END:variables
}
